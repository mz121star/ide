{
    "taskinfo" : {
    "ETA_log" : null,
        "deve_point" : "0",
        "site_id" : "95",
        "task_name" : "   \u00e8\u00a7\u0082\u00e5\u00af\u009f\u00e7\u00bd\u0091\u00e7\u00ab\u0099\u00e6\u0098\u00af\u00e5\u0090\u00a6\u00e8\u00bf\u0098\u00e5\u009c\u00a8\u00e9\u0097\u00ad\u00e5\u00ba\u0097",
        "test_point" : "0",
        "end_time" : null,
        "begin_test" : "0000-00-00",
        "begin_time" : "2013-03-06",
        "developer" : "0",
        "deve_point_log" : "",
        "begin_test_log" : null,
        "id" : "1814",
        "action_log" : ":6:6:23:",
        "time_log" : ":1362556890:1366271942:1366681176:",
        "importance" : "43",
        "task_status" : "24",
        "ETA" : "0000-00-00",
        "test_point_log" : "",
        "task_type" : "28",
        "user_id" : "6",
        "tester" : "0"
},
    "siteinfo" : {
    "crawl_server" : "39",
        "model_image" : "0",
        "comments" : "\r\n\r\n",
        "crawling_method" : "8",
        "retailer_tags" : "",
        "module_name" : "skincare_store_au",
        "url" : "http://www.skincarestore.com.au",
        "shipping_countries" : "",
        "id" : "100",
        "action_log" : ":43:43:43:43:43:48:6:",
        "affiliatefeed_name" : "",
        "retailer_name" : "SkincareStore",
        "time_log" : ":1342748502:1342748531:1342748718:1343204800:1346035730:1349926347:1363053028:",
        "deploy_server" : "18",
        "importance" : "43",
        "crawler_time" : "",
        "exclude_categories" : "",
        "ssl_site" : "14",
        "region" : "1",
        "site_status" : "21",
        "deploy_log" : null,
        "status_log" : ":19:21:21:21:21:21:21:",
        "retailer_handle" : "SkincareStore AU",
        "exclude_brands" : "",
        "brands" : ""
},
    "code" : [
    {
        "content" : "package module::skincare_store_au::default;\r\nuse Encode;\r\nuse vars qw($VERSION @ISA @EXPORT);\r\n$VERSION = 1.00;\r\n@ISA     = qw(Module::Module);\r\n@EXPORT  = ();\r\nuse strict;\r\n\r\n# ----------------------------------------------------\r\n# constructor\r\n# Modify Log\r\n# 03/03/2011 Peter create\r\n# ----------------------------------------------------\r\nsub new {\r\n\tmy $class = shift;\r\n\tmy %parm  = @_;\r\n\tmy $this  = {};\r\n\tbless $this, $class;\r\n\treturn $this;\r\n}\r\n\r\n# ----------------------------------------------------\r\n# get all product's url and categories then write them\r\n# into temp xml\r\n# Modify Log\r\n# 03/03/2011 Peter create\r\n# ----------------------------------------------------\r\n\r\nsub filter {\r\n\r\n\t#A200000 Filter retailer website starts\r\n\tLog::Write::setLog('A200000');\r\n\tmy $this     = shift;\r\n\tmy $writexml = new Feed::XML();\r\n\tmy $data     = $main::filedata;\r\n\tmy $hostUrl  = $this->{'config'}->{'host_url'};\r\n\tmy $catalog  = { 'Product' => [] };\r\n\tmy $charset  = 'UTF-8';\r\n\r\n\t# get categoryUrls\r\n\tmy @categoryUrls = &getCategoryUrls( $hostUrl, $charset );\r\n\r\n\tif ( !@categoryUrls ) {\r\n\r\n\t\t# E200000: filter failed\r\n\t\tLog::Write::setLog('E200000');\r\n\t\treturn;\r\n\t} else {\r\n\r\n\t\t# A200003: The total count of the entryUrl obtained\r\n\t\tLog::Write::setLog( 'A200003', { 'COUNT' => scalar(@categoryUrls) } );\r\n\t}\r\n\r\n\t# get all page urls\r\n\tmy @entryUrlList = &getEntryUrls( \\@categoryUrls, $charset, $hostUrl );\r\n\r\n\t# get all product links\r\n\tmy @allProducts = &getFilterProduct( $this, $charset, \\@entryUrlList, $hostUrl );\r\n\r\n\t# write tree date into XML file\r\n\tif (@allProducts) {\r\n\t\t$catalog->{'Product'} = \\@allProducts;\r\n\t\t$writexml->addXML( $catalog, $this->{'config'}->{'data_filter_file'} );\r\n\r\n\t\t# A200002the total count of detail page urls\r\n\t\tLog::Write::setLog( 'A200002', { 'COUNT' => scalar(@allProducts) } );\r\n\t} else {\r\n\r\n\t\t# E200000filter failed\r\n\t\tLog::Write::setLog('E200000');\r\n\t}\r\n\r\n\t# A299999Filter retailer website end.\r\n\tLog::Write::setLog('A299999');\r\n\r\n}\r\n\r\n# ----------------------------------------------------\r\n# parse all products detail page and write the infos\r\n# into final XML feed\r\n# Modify Log\r\n# 03/03/2011 Peter create\r\n# ----------------------------------------------------\r\nsub parser {\r\n\r\n\t# A300000Parser detail page starts.\r\n\tLog::Write::setLog('A300000');\r\n\tmy $this = shift;\r\n\r\n\t# new parser object\r\n\tmy $parserObj = module::skincare_store_au::parser->new;\r\n\r\n\t# new $writexml object, used for read and write XML info\r\n\tmy $writeXml = new Feed::XML();\r\n\r\n\t#read xml create by filter to get all products infos(url and category)\r\n\tmy @xmlInfo = $writeXml->readXML( $this->{'config'}->{'data_filter_file'} );\r\n\r\n\tmy $count = 0;\r\n\tmy $total = 0;\r\n\r\n\t# $catalog is used for recording a set of products\r\n\tmy $catalog = { 'Product' => [] };\r\n\tmy $hostUrl = $this->{'config'}->{'host_url'};\r\n\r\n\tfor my $oneTemp (@xmlInfo) {\r\n\r\n\t\t# %ProductInfo : one product info from *_filter.xml\r\n\t\tmy %oneTempInfo = %{$oneTemp};\r\n\t\tmy $productId   = ( @{ $oneTempInfo{'ProductId'} } )[0];\r\n\t\tmy $url         = ( @{ $oneTempInfo{'ProductURL'} } )[0];\r\n\t\tmy $brand;\r\n\t\tif ( $oneTempInfo{'Brand'} ) {\r\n\t\t\t$brand = ( @{ $oneTempInfo{'Brand'} } )[0];\r\n\t\t}\r\n\r\n\t\t#    my @category    = @{ $oneTempInfo{'Category'} };\r\n\t\tmy %product;\r\n\t\tmy %productInfo;\r\n\t\teval {\r\n\r\n\t\t\t# get infos from product detail page and save it in hash variable\r\n\t\t\t%productInfo = $parserObj->parseAndgetInfo( $url, $hostUrl );\r\n\t\t};\r\n\t\tif ($@) {\r\n\r\n\t\t\t# E300003 : Failed to extract information from XXX page.\r\n\t\t\tLog::Write::setLog( \"E300003\", { 'URL' => $url } );\r\n\t\t\tnext;\r\n\t\t}\r\n\t\tif ( $productInfo{\"Name\"} ) {\r\n\t\t\tmy $product = {\r\n\t\t\t\t'Retailer'    => $this->{'config'}->{'retailer_name'},\r\n\t\t\t\t'ProductId'   => $productId,\r\n\t\t\t\t'Name'        => $productInfo{'Name'},\r\n\t\t\t\t'Brand'       => $brand,\r\n\t\t\t\t'Price'       => $productInfo{'Price'},\r\n\t\t\t\t'SalePrice'   => $productInfo{'SalePrice'},\r\n\t\t\t\t'Description' => $productInfo{'Description'},\r\n\t\t\t\t'ProductURL'  => $productInfo{'ProductURL'},\r\n\t\t\t\t'ImageURL'    => $productInfo{'ImageURL'},\r\n\t\t\t\t'Category'    => $oneTempInfo{'Category'},\r\n\r\n\t\t\t\t#    'Size'        => $productInfo{'Size'},\r\n\t\t\t\t#    'Color'       => $productInfo{'Color'},\r\n\t\t\t\t#    'InStock'     => $productInfo{'InStock'},\r\n\t\t\t\t'Time' => $productInfo{'Time'}\r\n\t\t\t};\r\n\r\n\t\t\t$catalog->{'Product'} = [ @{ $catalog->{'Product'} }, $product ];\r\n\r\n\t\t\t$count++;\r\n\t\t\t$total++;\r\n\r\n\t\t\t# write data into XML per 100(configurable) records\r\n\t\t\tif ( $count == $this->{'config'}->{'write_frequency'} ) {\r\n\t\t\t\t$writeXml->addXML( $catalog, $this->{'config'}->{'data_feed_file'} );\r\n\t\t\t\t$catalog = { 'Product' => [] };\r\n\r\n\t\t\t\t# A300001 : Record XXX prodcuts have been appended to feed file.\r\n\t\t\t\tLog::Write::setLog( \"A300001\", { 'COUNT' => $count } );\r\n\t\t\t\t$count = 0;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t$writeXml->addXML( $catalog, $this->{'config'}->{'data_feed_file'} );\r\n\r\n\t# A300001 : Record XXX prodcuts have been appended to feed file.\r\n\tLog::Write::setLog( \"A300001\", { 'COUNT' => $count } );\r\n\r\n\tif ($total) {\r\n\r\n\t\t# A300003 : Record XXX prodcuts have been written into feed file totally.\r\n\t\tLog::Write::setLog( 'A300003', { 'COUNT' => $total } );\r\n\r\n\t\t# A399999 : Parser detail page end.\r\n\t\tLog::Write::setLog('A399999');\r\n\t} else {\r\n\r\n\t\t# E300000 : Parser failed.\r\n\t\tLog::Write::setLog('E300000');\r\n\t}\r\n}\r\n\r\n# ----------------------------------------------------\r\n# get all category urls\r\n# Modify Log\r\n# 03/03/2011 Peter create\r\n# ----------------------------------------------------\r\n\r\nsub getCategoryUrls {\r\n\r\n\tmy $url     = shift;\r\n\tmy $charset = shift;\r\n\tmy $data    = $main::filedata;\r\n\tmy @categoryUrls;\r\n\tmy $content = $data->getPage( $url, $charset );\r\n\t$content =~ s/<!-- .*? -->//isg;\r\n\t# get page failed\r\n\tif ( !$content ) {\r\n\r\n\t\t# E200001 Failed to get XX entrance information.\r\n\t\tLog::Write::setLog( 'E200001', { 'URL' => $url } );\r\n\t\treturn;\r\n\t}\r\n\r\n\tmy $brandUrl;\r\n\tif ( $content =~ /<a href=\"([^\"]*)\">By Brand<\\/a>/is ) {\r\n\t\t$brandUrl = $url . $1;\r\n\t}\r\n\r\n\tmy $brandContent = $data->getPage( $brandUrl, $charset );\r\n\t$brandContent =~ s/<!-- .*? -->//isg;\r\n\tif ( $brandContent =~ /<table id=\"item_table1\">(.*?)<\\/tr>\\s*<\\/table>\\s*<\\/td>\\s*<\\/tr>\\s*<\\/table>/is ) {\r\n\t\t$brandContent = $1;\r\n\t\twhile ( $brandContent =~ /<a href=\"([^\"]*)\" .*?>([^<]*)<\\/a>/isg ) {\r\n\t\t\tmy %categoryUrl;\r\n\t\t\tmy $categoryUrlStr = $1;\r\n\t\t\tmy $brand          = $2;\r\n\t\t\tunless ( $categoryUrlStr =~ /http:\\/\\/www.skincarestore.com.au\\//is ) {\r\n\t\t\t\t$categoryUrlStr = $url . $1;\r\n\t\t\t}\r\n\t\t\t$brand =~ s/\\s$//is;\r\n\t\t\t$categoryUrl{'Brand'} = $brand;\r\n\t\t\t$categoryUrl{'URL'}   = $categoryUrlStr;\r\n\t\t\tpush( @categoryUrls, \\%categoryUrl );\r\n\r\n\t\t\t# A200004 The entryUrl xxx has been obtained\r\n\t\t\tLog::Write::setLog( 'A200004', { 'URL' => $categoryUrl{'URL'} } );\r\n\t\t}\r\n\t}\r\n\r\n\tif ( $content =~ /<div id=\"navigation\">(.*?)<\\/ul>\\s*<\\/li>\\s*<\\/ul>\\s*<\\/div>\\s*<\\/td>\\s*<\\/tr>/is ) {\r\n\t\t$content = $1;\r\n\t\twhile ( $content =~ /<li class=\"expand\"> <a href=\"([^\"]*)\"/isg ) {\r\n\t\t\t\r\n\t\t\tmy $categoryUrlStr = $1;\r\n\t\t\tunless ( $categoryUrlStr =~ /http:\\/\\/www.skincarestore.com.au\\//is ) {\r\n\t\t\t\t$categoryUrlStr = $url . $1;\r\n\t\t\t}\t\t\r\n\t\t\tmy $subContent = $data->getPage($categoryUrlStr,$charset);\r\n\t\t\tif( $subContent =~ /<tr><td id=\"item_td\">(.*?)<\\/table>/is ){\r\n\t\t\t\t$subContent = $1;\r\n\t\t\t\twhile( $subContent =~ /<a href=\"([^\"]*)\"/isg ){\r\n\t\t\t\t\tmy $subCategoryUrl = $1;\r\n\t\t\t\t\tunless ( $subCategoryUrl =~ /http:\\/\\/www.skincarestore.com.au\\//is ) {\r\n\t\t\t\t        $subCategoryUrl = $url . $1;\r\n\t\t\t        }\r\n\t\t\t        my %categoryUrl;\r\n\t\t\t        $categoryUrl{'URL'} = $subCategoryUrl;\r\n\t\t\t        push( @categoryUrls, \\%categoryUrl );\r\n\t\t\t        # A200004 The entryUrl xxx has been obtained\r\n\t\t\t        Log::Write::setLog( 'A200004', { 'URL' => $categoryUrl{'URL'} } );\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t}\r\n\treturn @categoryUrls;\r\n}\r\n\r\n# ----------------------------------------------------\r\n# get all entry urls\r\n# Modify Log\r\n# 03/03/2011 Peter create\r\n# ----------------------------------------------------\r\nsub getEntryUrls {\r\n\r\n\tmy $categoryUrls    = shift;\r\n\tmy $charset         = shift;\r\n\tmy $hostUrl         = shift;\r\n\tmy $data            = $main::filedata;\r\n\tmy @categoryUrlList = @{$categoryUrls};\r\n\tmy @pageUrlList;\r\n\r\n\tfor my $categoryRef (@categoryUrlList) {\r\n\t\tmy %categoryHash = %{$categoryRef};\r\n\t\tmy $categoryUrl  = $categoryHash{'URL'};\r\n\t\tmy $content      = $data->getPage( $categoryUrl, $charset );\r\n\t\tmy $pageNum      = 1;\r\n\t\tpush( @pageUrlList, \\%categoryHash );\r\n\t\tif ( $content =~ /<td align='center'>(.*?)<\\/table>/is ) {\r\n\t\t\t$content = $1;\r\n\t\t\twhile ( $content =~ /<a href='(.*?)'>.*?<\\/a>/isg ) {\r\n\t\t\t\tmy %pageUrl;\r\n\t\t\t\tmy $pageUrlStr = $1;\r\n\t\t\t\tunless ( $pageUrlStr =~ /http:\\/\\/www.skincarestore.com.au\\//is ) {\r\n\t\t\t\t\t$pageUrlStr = $hostUrl . $1;\r\n\t\t\t\t}\r\n\t\t\t\t$pageUrl{'URL'} = $pageUrlStr;\r\n\t\t\t\tif ( $categoryHash{'Brand'} ) {\r\n\t\t\t\t\t$pageUrl{'Brand'} = $categoryHash{'Brand'};\r\n\t\t\t\t}\r\n\t\t\t\tpush( @pageUrlList, \\%pageUrl );\r\n\t\t\t\t$pageNum++;\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tmy %pageUrl;\r\n\t\t\t$pageUrl{'URL'} = $categoryUrl;\r\n\t\t\tif ( $categoryHash{'Brand'} ) {\r\n\t\t\t\t$pageUrl{'Brand'} = $categoryHash{'Brand'};\r\n\t\t\t}\r\n\t\t\tpush( @pageUrlList, \\%pageUrl );\r\n\t\t\t$pageNum++;\r\n\t\t}\r\n\r\n\t\t# A200008 Found XXX pages from entry page XXX\r\n\t\tLog::Write::setLog( 'A200008', { 'COUNT' => $pageNum, 'URL' => $categoryUrl } );\r\n\t}\r\n\r\n\t# A200003 The total count of the entryUrl obtained\r\n\tLog::Write::setLog( 'A200003', { 'COUNT' => scalar(@pageUrlList) } );\r\n\treturn @pageUrlList;\r\n}\r\n\r\n# ----------------------------------------------------\r\n# get all product in filter xml file\r\n# Modify Log\r\n# 03/03/2011 Peter create\r\n# ----------------------------------------------------\r\nsub getFilterProduct {\r\n\tmy $this        = shift;\r\n\tmy $charset     = shift;\r\n\tmy $data        = $main::filedata;\r\n\tmy $pageUrls    = shift;\r\n\tmy $hostUrl     = shift;\r\n\tmy @pageUrlList = @{$pageUrls};\r\n\tmy @allProducts;\r\n\r\n\t# paginal out of stock product count\r\n\t# my $outOfStock = 0;\r\n\r\n\tfor my $pageRef (@pageUrlList) {\r\n\t\tmy %pageHash = %{$pageRef};\r\n\t\tmy $pageUrl  = $pageHash{'URL'};\r\n\r\n\t\t# paginal instock product count\r\n\t\tmy $productCount = 0;\r\n\t\tmy %product;\r\n\t\tmy $content = $data->getPage( $pageUrl, $charset );\r\n\t\tif ( !$content ) {\r\n\r\n\t\t\t# E200005 Failed to get the main url of the website .\r\n\t\t\tLog::Write::setLog( 'E200005', { 'URL' => $pageUrl } );\r\n\t\t\tnext;\r\n\t\t}\r\n\t\tmy @category;\r\n\t\tif ( $content =~ /<div class=\"header_links\"(.*?)div>/is ) {\r\n\t\t\tmy $temp = $1;\r\n\t\t\tif($temp =~ m/href=.*?>(.*?<\\/a>.*?)<\\/$/is){\r\n\t\t\t\tmy $categoryStr = $1;\r\n\t\t\t\t$categoryStr =~ s/&nbsp;&gt;&nbsp;//isg;\r\n\t\t\t\t$categoryStr =~ s/\\///isg;\r\n\t\t\t\t@category = split( '<a>', $categoryStr );\r\n\t\t\t}elsif($temp =~ /\">(.*?)<\\/$/is){\r\n#\t\t\t\tLog::Write::setLog( 'E88888', { 'URL' => $pageUrl } );\r\n\t\t\t\tmy $categoryStr = 'Brand'.'<a>'.$1;\r\n\t\t\t\t$categoryStr =~ s/&nbsp;&gt;&nbsp;//isg;\r\n\t\t\t\t$categoryStr =~ s/\\///isg;\r\n\t\t\t\t@category = split( '<a>', $categoryStr );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif ( $content =~ /<tr><td id=\"item_tds\">(.*?)<div id=\"footer\">/is ) {\r\n\t\t\t$content = $1;\r\n\t\t\twhile ( $content =~ /<a href=\"([^\"]*)\".*?<div class=\"list([^\"]*)\">/isg ) {\r\n\t\t\t\tmy %product;\r\n\t\t\t\tmy $productUrl = $hostUrl . $1;\r\n\t\t\t\tmy $productId  = $2;\r\n\t\t\t\t$productId =~ s/^\\s+|\\s+$//isg;\r\n\t\t\t\t$product{'ProductId'}  = $productId;\r\n\t\t\t\t$product{\"ProductURL\"} = $productUrl;\r\n\t\t\t\t$product{\"Category\"}   = [ { 'Part' => \\@category } ];\r\n\t\t\t\tif ( $pageHash{'Brand'} ) {\r\n\t\t\t\t\t$product{'Brand'} = $pageHash{'Brand'};\r\n\t\t\t\t}\r\n\t\t\t\tpush( @allProducts, \\%product );\r\n\t\t\t\t$productCount++;\r\n\t\t\t}\r\n\t\t}elsif ( $content =~ /<tr><td id=\"item_td\">(.*?)<div id=\"footer\">/is ) {\r\n\t\t\t$content = $1;\r\n\t\t\twhile ( $content =~ /<a href=\"([^\"]*)\".*?<div class=\"list([^\"]*)\">/isg ) {\r\n\t\t\t\tmy %product;\r\n\t\t\t\tmy $productUrl = $hostUrl . $1;\r\n\t\t\t\tmy $productId  = $2;\r\n\t\t\t\t$productId =~ s/^\\s+|\\s+$//isg;\r\n\t\t\t\t$product{'ProductId'}  = $productId;\r\n\t\t\t\t$product{\"ProductURL\"} = $productUrl;\r\n\t\t\t\t$product{\"Category\"}   = [ { 'Part' => \\@category } ];\r\n\t\t\t\tif ( $pageHash{'Brand'} ) {\r\n\t\t\t\t\t$product{'Brand'} = $pageHash{'Brand'};\r\n\t\t\t\t}\r\n\t\t\t\tpush( @allProducts, \\%product );\r\n\t\t\t\t$productCount++;\r\n\t\t\t}\r\n\t\t}else {\r\n\r\n\t\t\t# E200005 Failed to get the main url of the website .\r\n\t\t\tLog::Write::setLog( 'E200005', { 'POINT' => \"Product\",'URL' => $pageUrl } );\r\n\t\t\tnext;\r\n\t\t}\r\n\r\n\t\t# A200001: Found XXX piece URLs of detail page through XXX entrance\r\n\t\tLog::Write::setLog( 'A200001', { 'COUNT' => $productCount, 'URL' => $pageUrl } );\r\n\t}\r\n\r\n\t# A200007: Record the out of stock product number.\r\n\t# Log::Write::setLog( 'A200007', { 'COUNT' => $outOfStock } );\r\n\r\n\treturn @allProducts;\r\n}\r\n\r\n1;\r\n",
        "title" : "default.pm"
    },
    {
        "content" : "package module::skincare_store_au::parser;\r\nuse Encode;\r\nuse Encode::JP::H2Z;\r\nuse strict;\r\n\r\n# ---------------------------------------------\r\n# constructor\r\n# 03/03/2011 Peter create\r\n# ---------------------------------------------\r\nsub new {\r\n\tmy $class = shift;\r\n\tmy $self  = {};\r\n\tbless $self, $class;\r\n\treturn $self;\r\n}\r\n\r\n# ---------------------------------------------\r\n# parse one product detail page\r\n# 03/03/2011 Peter create\r\n# ---------------------------------------------\r\nsub parseAndgetInfo {\r\n\tmy $this    = shift;\r\n\tmy $url     = shift;\r\n\tmy $hostUrl = shift;\r\n\tmy $charset = 'UTF-8';\r\n\t$url =~ s/\\r|\\t|\\n|\\s//igs;\r\n\tmy $data = $main::filedata;\r\n\r\n\tmy $content;\r\n\t$content = $data->getPage( $url, $charset );\r\n\tif ( !$content ) {\r\n\r\n\t\t# E300001 : Failed to get detail information of XXX.\r\n\t\tLog::Writer::setLog( \"E300001\", { 'URL' => $url } );\r\n\t\treturn;\r\n\t}\r\n\r\n\tif ( $content =~ /<b>\\(Out of Stock\\)<\\/b>/is ) {\r\n\t\t# A300002 : Some product is not instock,so this product page url is recorded.\r\n\t\tLog::Write::setLog( \"A300002\", { 'URL' => $url } );\r\n\t\treturn;\r\n\t}\r\n\r\n\t# defind properties about product\r\n\tmy %product;\r\n\r\n\t#\t my $retailerName ;\r\n\t#    my $productId;\r\n\tmy $retailer;\r\n\tmy $name;\r\n\r\n\t#    my $brand;\r\n\t#    my @category;\r\n\tmy $price;\r\n\tmy $salePrice;\r\n\tmy $description;\r\n\tmy $productURL = $url;\r\n\tmy $imageURL;\r\n\r\n\t#    my @sizes;\r\n\t#    my @colors;\r\n\t#    my @instocks;\r\n\tmy $time = new Date::Time->getGMT();\r\n\r\n\tif ( $content =~ /<div class=\"product_main\"(.*?)<\\/div>\\s*<\\/div>\\s*<\\/div>\\s*<\\/div>\\s*<br\\/>/is ) {\r\n\t\t$content = $1;\r\n\t}\r\n\r\n\t# get Name & Image\r\n\tif ( $content =~ /<img src=\"([^\"]*)\".*?title=\"([^\"]*)\"/is ) {\r\n\t\t$imageURL = $1;\r\n\t\t$name = $2;\r\n\t} \r\n\tif(!$name){\r\n\r\n\t\t# E300002 : Failed get XXX field for page XXX.\r\n\t\tLog::Write::setLog( \"E300002\", { 'URL' => $url, 'POINT' => 'Name' } );\r\n\t\treturn;\r\n\t}\r\n\tif(!$imageURL){\r\n\t\t# E300002 : Failed get XXX field for page XXX.\r\n\t\tLog::Write::setLog( \"E300002\", { 'URL' => $url, 'POINT' => 'ImageURL' } );\r\n\t\treturn;\r\n\t}\r\n\t$imageURL = $hostUrl.$imageURL;\r\n\t$name =~ s/^\\s+|\\s+$//isg;\r\n\r\n\t# get price and salePrice\r\n\tif($content =~ m/<div class=\"prices\"(.*?)<script>/is){\r\n\t\tmy $temp = $1;\r\n\t\tif ( $temp =~ /<div class=\"rrp.*?>([^<]*)<\\/div>/is ) {\r\n\t\t\t$price = $1;\r\n\t\t}\r\n\t\tif ($temp =~ /<div class=\"price.*?>([^<]*)</is){\r\n\t\t\t$salePrice = $1;\r\n\t\t}\r\n\t}\r\n\tif($price eq $salePrice){\r\n\t\t$salePrice = '';\r\n\t}\r\n\tif ( !$price ) {\r\n\r\n\t\t# E300002 : Failed get XXX field for page XXX.\r\n\t\tLog::Write::setLog( \"E300002\", { 'URL' => $url, 'POINT' => 'Price' } );\r\n\t\treturn;\r\n\t}\r\n\t$price =~ s/^\\s+|\\s+$//isg;\r\n\r\n\t# get Description\r\n\r\n\tif ( $content =~ /<span itemprop=\"description\">(.+?)<\\/span>/is ) {\r\n\t\t$description = $1;\r\n\t} else {\r\n\r\n\t\t# E300002 : Failed get XXX field for page XXX.\r\n\t\tLog::Write::setLog( \"E300002\", { 'URL' => $url, 'POINT' => 'Description' } );\r\n\t\t$description = $name;\r\n\t}\r\n\t$description =~ s/<OL[^>]*>/<ul>/isg;\r\n\t$description =~ s/<\\/OL>/<\\/ul>/isg;\r\n\t$description =~ s/<UL[^>]*>/<ul>/isg;\r\n\t$description =~ s/<\\/UL>/<\\/ul>/isg;\r\n\t$description =~ s/<LI[^>]*>/<li>/isg;\r\n\t$description =~ s/<\\/LI>/<\\/li>/isg;\r\n\t$description =~ s/<BR>/<br>/isg;\r\n\t$description =~ s/<p>/<br>/isg;\r\n\t$description =~ s/<\\/p>/<br>/isg;\r\n\t$description =~ s/\\s*<[^l|b|u|p|\\/][^>]*>\\s*//isg;\r\n\t$description =~ s/\\s*<\\/[^l|u|p|b][^>]*>\\s*//isg;\r\n\t$description =~ s/\\s*(<ul>|<li>|<\\/li>|<\\/ul>)\\s*/$1/isg;\r\n#\tmy @decsriptions = split( /<li>/, $description );\r\n#\tmy $newDecsription;\r\n#\r\n#\tif ( $#decsriptions > 0 ) {\r\n#\t\tfor ( my $i = 0 ; $i <= $#decsriptions ; $i++ ) {\r\n#\t\t\t$newDecsription = $newDecsription . $decsriptions[$i];\r\n#\t\t\tif ( $i == 0 ) {\r\n#\t\t\t\tif ( $decsriptions[$i] !~ /<ul>/is ) {\r\n#\t\t\t\t\t$newDecsription = $newDecsription . '<ul><li>';\r\n#\t\t\t\t} else {\r\n#\t\t\t\t\t$newDecsription = $newDecsription . '<li>';\r\n#\t\t\t\t}\r\n#\t\t\t} elsif ( $i == $#decsriptions ) {\r\n#\t\t\t\tif ( $decsriptions[$i] !~ /<\\/li>/is ) {\r\n#\t\t\t\t\t$newDecsription = $newDecsription . '</li>';\r\n#\t\t\t\t}\r\n#\t\t\t\tif ( $decsriptions[$i] !~ /<\\/ul>/is ) {\r\n#\t\t\t\t\t$newDecsription = $newDecsription . '</ul>';\r\n#\t\t\t\t}\r\n#\t\t\t} else {\r\n#\t\t\t\tif ( $decsriptions[$i] !~ /<\\/li>/is ) {\r\n#\t\t\t\t\t$newDecsription = $newDecsription . '</li><li>';\r\n#\t\t\t\t} else {\r\n#\t\t\t\t\t$newDecsription = $newDecsription . '<li>';\r\n#\t\t\t\t}\r\n#\t\t\t}\r\n#\t\t}\r\n#\t}\r\n#\r\n#\tif ($newDecsription) {\r\n#\t\t$description = $newDecsription;\r\n#\t}\r\n\t$description =~ s/^\\s+|\\s+$//isg;\r\n\r\n\t# bulid Product\r\n\t%product = (\r\n\r\n\t\t#    'Retailer'    => $retailerName,\r\n\t\t#    'ProductId'   => $productId,\r\n\t\t'Name' => $name,\r\n\r\n\t\t#    'Brand'       => $brand,\r\n\t\t#    'Category'    => [{'Part' =>\\@category}],\r\n\t\t'Price'       => $price,\r\n\t\t'SalePrice'   => $salePrice,\r\n\t\t'Description' => $description,\r\n\t\t'ProductURL'  => $productURL,\r\n\t\t'ImageURL'    => $imageURL,\r\n\r\n\t\t#    'Size'        => \\@sizes,\r\n\t\t#    'Color'       => \\@colors,\r\n\t\t#    'InStock'     => \\@instocks,\r\n\t\t'Time' => $time\r\n\t);\r\n\treturn %product;\r\n}\r\n\r\n1;\r\n",
        "title" : "parser.pm"
    },
    {
        "content" : "retailer_name=SkincareStore AU\r\nhost_url=http://www.skincarestore.com.au/\r\ndata_path={$data_storage_path}/skincare_store_au\r\ndata_feed_path={$data_path}/feed\r\ndata_feed_file={$data_path}/feed/skincare_store_au.xml\r\ndata_filter_file={$data_path}/feed/skincare_store_au_temp.xml\r\ndata_page_path={$data_path}/pages\r\nlog_path={$logs_storage_path}/skincare_store_au\r\nsys_timeout=86400\r\nwait_time=0\r\nwrite_frequency=100\r\nthread_number=5\r\nplugin_feed_mergebypid_filter=on\r\nplugin_feed_mergebypid=off\r\nplugin_multithread_downloadpage=off\r\nplugin_multithread_downloadimage=off\r\npage_from=online\r\nplugin_check_image=off\r\n@mail_to=yuesheng.li@hisoft.com",
        "title" : "skincare_store_au.conf"
    }
]
}
